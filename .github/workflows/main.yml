on:
  push:
    # Add other triggers if needed

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  setupUnity:
    name: Set up Unity 🛠️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Unity with Unity Hub or Unity CLI (adjust to your preference)
      - name: Set up Unity
        uses: game-ci/setup-unity@v1
        with:
          unity-version: 2021.3.18f1  # Update to your desired Unity version
          modules: 'unity,publishing'  # Add any other required modules

  buildAndroid:
    name: Build for Android 📱
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Unity (similar to the previous job)
      - name: Set up Unity
        uses: game-ci/setup-unity@v1
        with:
          unity-version: 2021.3.18f1  # Update to your desired Unity version
          modules: 'unity,publishing'

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-
            Library-

      - name: Build Android
        run: |
          mkdir -p build/Android
          Unity -projectPath "." -batchmode -nographics -executeMethod BuildScript.BuildAndroid -quit
          mv Build/buildName/Android build/Android

      - uses: actions/upload-artifact@v2
        with:
          name: build-Android
          path: build/Android

